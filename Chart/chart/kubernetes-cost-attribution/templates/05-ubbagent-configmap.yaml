{{ if .Values.enableRBACGoogleMarketPlace }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.namePrefix }}-ubbagent-config
  namespace: {{ .Values.namespace }}
data:
  config.yaml: |-
    # The identity section contains authentication information used by the agent.
    identities:
    - name: gcp
      gcp:
        # A base64-encoded service account key used to report usage to
        # Google Service Control.
        encodedServiceAccountKey: ${REPORTING_KEY}

    # The metrics section defines the metric names and types that the agent
    # is configured to record.
    metrics:
    # - name: requests
    #   type: int
    #
    #   # The endpoints section of a metric defines which endpoints the metric data is sent to.
    #   endpoints:
    #   - name: on_disk
    #   - name: servicecontrol
    #
    #   # The aggregation section indicates that reports that the agent receives for this metric should
    #   # be aggregated for a specified period of time prior to being sent to the reporting endpoint.
    #   aggregation:
    #     bufferSeconds: 60

    - name: container_time
      type: int
      # The empty passthrough second indicates that no aggregation should occur for this metric.
      # Reports received are immediately sent to the reporting endpoint.
      passthrough: {}
      endpoints:
      # - name: on_disk
      - name: servicecontrol

    # The endpoints section defines where metering data is ultimately sent. Currently
    # supported endpoints include:
    # * disk - some directory on the local filesystem
    # * servicecontrol - Google Service Control: https://cloud.google.com/service-control/overview
    endpoints:
    # - name: on_disk
    #   disk:
    #     reportDir: /var/ubbagent/reports
    #     expireSeconds: 3600
    - name: servicecontrol
      servicecontrol:
        identity: gcp
        serviceName: kubernetes-cost-attribution.mp-managedkube-public.appspot.com
        consumerId: ${CUNSUMER_ID}

    # The sources section lists metric data sources run by the agent itself. The currently-supported
    # source is 'heartbeat', which sends a defined value to a metric at a defined interval.
    sources:
    - name: container_time
      heartbeat:
        metric: container_time
        intervalSeconds: 60
        value:
          int64Value: 60
        labels:
          auto: true
{{ end }}
