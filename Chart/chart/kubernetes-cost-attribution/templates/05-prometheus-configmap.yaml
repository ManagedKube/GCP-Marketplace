---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.namePrefix }}-prometheus-config
  namespace: {{ .Values.namespace }}
data:
  config.yml: |-
    global:
      scrape_interval: 15s

    # Those files come from the kubernetes configmap
    #rule_files:
    #- '/etc/prometheus/rules/*.yml'

    # Scrape config for cluster components.
    scrape_configs:

    - job_name: kubelet
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      kubernetes_sd_configs:
      - role: node

      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

    # - job_name: kubernetes-nodes-cadvisor
    #   scrape_interval: 10s
    #   scrape_timeout: 10s
    #   scheme: https  # remove if you want to scrape metrics on insecure port
    #   tls_config:
    #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    #   kubernetes_sd_configs:
    #     - role: node
    #   relabel_configs:
    #     - action: labelmap
    #       regex: __meta_kubernetes_node_label_(.+)
    #     - target_label: __address__
    #       replacement: kubernetes.default.svc:443
    #
    #     # Only for Kubernetes ^1.7.3.
    #     # See: https://github.com/prometheus/prometheus/issues/2916
    #     # https://github.com/prometheus/prometheus/blob/master/documentation/examples/prometheus-kubernetes.yml#L129
    #     # - source_labels: [__meta_kubernetes_node_name]
    #     #   regex: (.+)
    #     #   target_label: __metrics_path__
    #     #   replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
    #
    #     # for now, using this until after 1.7.3
    #     - source_labels: [__meta_kubernetes_node_name]
    #       regex: (.+)
    #       target_label: __metrics_path__
    #       replacement: /api/v1/nodes/${1}:4194/proxy/metrics
    #
    #   metric_relabel_configs:
    #     - action: replace
    #       source_labels: [id]
    #       regex: '^/machine\.slice/machine-rkt\\x2d([^\\]+)\\.+/([^/]+)\.service$'
    #       target_label: rkt_container_name
    #       replacement: '${2}-${1}'
    #     - action: replace
    #       source_labels: [id]
    #       regex: '^/system\.slice/(.+)\.service$'
    #       target_label: systemd_service_name
    #       replacement: '${1}'

    # - job_name: node-exporter
    #   scheme: http
    #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    #
    #   kubernetes_sd_configs:
    #   - role: node
    #
    #   relabel_configs:
    #   - action: labelmap
    #     regex: __meta_kubernetes_node_label_(.+)
    #   - source_labels: [__address__]
    #     action: replace
    #     target_label: __address__
    #     regex: ([^:]+)(?::\d+)?
    #     replacement: $1:9100

    # Scrapes the endpoint lists for the Kubernetes API server, kube-state-metrics,
    # and node-exporter, which we all consider part of a default setup.
    - job_name: standard-endpoints
      tls_config:
        server_name: kubernetes
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      kubernetes_sd_configs:
      - role: endpoints

      relabel_configs:
      - action: keep
        source_labels: [__meta_kubernetes_service_name]
        regex: kubernetes|kube-state-metrics|etcd-cluster
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: __scheme__
        regex: kubernetes
        replacement: https
      - action: replace
        source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - action: replace
        source_labels: [__meta_kubernetes_service_name]
        target_label: job

    # Scrape config for service endpoints.
    #
    # The relabeling allows the actual service scrape endpoint to be configured
    # via the following annotations:
    #
    # * `prometheus.io/scrape`: Only scrape services that have a value of `true`
    # * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need
    # to set this to `https` & most likely set the `tls_config` of the scrape config.
    # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
    # * `prometheus.io/port`: If the metrics are exposed on a different port to the
    # service then set this appropriately.
    - job_name: 'services'

      kubernetes_sd_configs:
      - role: endpoints

      relabel_configs:
      - action: drop
        source_labels: [__meta_kubernetes_service_name]
        regex: kubernetes|node-exporter|kube-state-metrics
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name]
        action: replace
        separator: /
        target_label: job
        replacement: $1
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: instance
      - source_labels: [__meta_kubernetes_pod_node_name]
        target_label: node

    # Scrape config for pods
    #
    # The relabeling allows the actual pod scrape endpoint to be configured via the
    # following annotations:
    #
    # * `prometheus.io/scrape`: Only scrape pods that have a value of `true`
    # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
    # * `prometheus.io/port`: Scrape the pod on the indicated port instead of the
    # pod's declared ports (default is a port-free target if none are declared).
    # - job_name: 'pods'
    #
    #   kubernetes_sd_configs:
    #   - role: pod
    #
    #   relabel_configs:
    #   - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
    #     action: keep
    #     regex: true
    #   - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
    #     action: replace
    #     target_label: __metrics_path__
    #     regex: (.+)
    #   - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
    #     action: replace
    #     regex: ([^:]+)(?::\d+)?;(\d+)
    #     replacement: $1:$2
    #     target_label: __address__
    #   - action: labelmap
    #     regex: __meta_kubernetes_pod_label_(.+)
    #   # - source_labels: [__meta_kubernetes_pod_namespace]
    #   #   action: replace
    #   #   target_label: namespace
    #   # - source_labels: [__meta_kubernetes_pod_name]
    #   #   action: replace
    #   #   target_label: instance
    #   # - source_labels: [__meta_kubernetes_pod_node_name]
    #   #   target_label: node

    # alerting:
    #   alert_relabel_configs:
    #   - action: replace
    #     target_label: environment
    #     replacement: ${ENVIRONMENT}
    #
    #   alertmanagers:
    #   - path_prefix: /alertmanager
    #
    #     kubernetes_sd_configs:
    #     - role: endpoints
    #
    #     relabel_configs:
    #     - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name]
    #       regex: devops/alertmanager
    #       separator: /
    #       action: keep
