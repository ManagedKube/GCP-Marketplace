apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.namePrefix }}-kube-state-metrics-deployment
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: kube-state-metrics
    spec:
      {{ if .Values.enableRBAC }}
      serviceAccountName: {{ .Values.namePrefix }}-kube-state-metric
      {{ end }}
      {{ if .Values.enableRBACGoogleMarketPlace }}
      serviceAccountName: {{ .Values.controller.serviceAccount }}
      {{ end }}
      containers:
      - name: kube-state-metrics
        image: "{{ .Values.kubeStateMetrics.image.repository }}:{{ .Values.kubeStateMetrics.image.tag }}"
        imagePullPolicy: "{{ .Values.kubeStateMetrics.image.pullPolicy }}"
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: {{ .Values.kubeStateMetrics.resources.limits.cpu }}
            memory: {{ .Values.kubeStateMetrics.resources.limits.memory }}
          requests:
            cpu: {{ .Values.kubeStateMetrics.resources.requests.cpu }}
            memory: {{ .Values.kubeStateMetrics.resources.requests.memory }}
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /metrics
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /metrics
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
